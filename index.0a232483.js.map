{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAG/B,EAAY,AADD,AADH,EAAM,aAAa,CAAC,SACX,aAAa,CAAC,MACV,gBAAgB,CAAC,MAEtC,EAAgB,EAAE,CAClB,EAAS,EAAE,CAEX,EAAQ,EAAM,aAAa,CAAC,SAGlC,AAFkB,EAAM,gBAAgB,CAAC,MAE/B,OAAO,CAAC,SAAC,CAAnB,EAGE,AAFY,EAAG,gBAAgB,CAAC,MAE5B,OAAO,CAAC,SAAC,CAAb,EACE,EAAc,IAAI,CAAC,EAAG,WAAW,CACnC,EACF,GAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,MAAM,CAAE,GAAK,EAAG,CAChD,IAAM,EAAS,CACb,KAAM,CAAa,CAAC,EAAE,CACtB,SAAU,CAAa,CAAC,EAAI,EAAE,CAC9B,IAAK,CAAC,CAAa,CAAC,EAAI,EAAE,CAC1B,OAAQ,SAAS,CAAa,CAAC,EAAI,EAAE,CAAC,OAAO,CAAC,QAAS,IACzD,EAEA,EAAO,IAAI,CAAC,EACd,CA+BA,SAAS,IACP,EAAM,SAAS,CAAG,GAElB,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,SAAS,CAAG,eAEP,MAAA,CADA,EAAO,IAAI,CAAC,qBAEZ,MAAA,CADA,EAAO,QAAQ,CAAC,qBAEf,MAAA,CADD,EAAO,GAAG,CAAC,sBAC4B,MAAA,CAAtC,EAAO,MAAM,CAAC,cAAc,CAAC,SAAS,eAG/C,EAAM,WAAW,CAAC,EACpB,EACF,CA5CA,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAG,gBAAgB,CAAC,QAAS,SAAC,CAA9B,EAGE,OAFmB,EAAE,aAAa,CAAC,WAAW,CAAC,IAAI,IAGjD,IAAK,OACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,C,GACjD,KAEF,KAAK,WACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,QAAQ,CAAC,aAAa,CAAC,EAAE,QAAQ,C,GACzD,KAEF,KAAK,MACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,GAAG,CAAG,EAAE,GAAG,A,GACnC,KAEF,KAAK,SACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,EAK7C,CAEA,GACF,EACF,GAmBA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar thead = table.querySelector(\"thead\");\nvar trOfHead = thead.querySelector(\"tr\");\nvar trThThead = trOfHead.querySelectorAll(\"th\");\nvar arrayOfPeople = [];\nvar people = [];\nvar tbody = table.querySelector(\"tbody\");\nvar trOfTbody = tbody.querySelectorAll(\"tr\");\ntrOfTbody.forEach(function(tr) {\n    var tds = tr.querySelectorAll(\"td\");\n    tds.forEach(function(td) {\n        arrayOfPeople.push(td.textContent);\n    });\n});\nfor(var i = 0; i < arrayOfPeople.length; i += 4){\n    var person = {\n        name: arrayOfPeople[i],\n        position: arrayOfPeople[i + 1],\n        age: +arrayOfPeople[i + 2],\n        salary: parseInt(arrayOfPeople[i + 3].replace(/[$,]/g, \"\"))\n    };\n    people.push(person);\n}\ntrThThead.forEach(function(th) {\n    th.addEventListener(\"click\", function(e) {\n        var columnName = e.currentTarget.textContent.trim();\n        switch(columnName){\n            case \"Name\":\n                people.sort(function(a, b) {\n                    return a.name.localeCompare(b.name);\n                });\n                break;\n            case \"Position\":\n                people.sort(function(a, b) {\n                    return a.position.localeCompare(b.position);\n                });\n                break;\n            case \"Age\":\n                people.sort(function(a, b) {\n                    return a.age - b.age;\n                });\n                break;\n            case \"Salary\":\n                people.sort(function(a, b) {\n                    return a.salary - b.salary;\n                });\n                break;\n            default:\n                break;\n        }\n        renderTable();\n    });\n});\nfunction renderTable() {\n    tbody.innerHTML = \"\";\n    people.forEach(function(person) {\n        var tr = document.createElement(\"tr\");\n        tr.innerHTML = \"\\n      <td>\".concat(person.name, \"</td>\\n      <td>\").concat(person.position, \"</td>\\n      <td>\").concat(person.age, \"</td>\\n      <td>$\").concat(person.salary.toLocaleString(\"en-US\"), \"</td>\\n    \");\n        tbody.appendChild(tr);\n    });\n}\nrenderTable();\n\n//# sourceMappingURL=index.0a232483.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst thead = table.querySelector('thead');\nconst trOfHead = thead.querySelector('tr');\nconst trThThead = trOfHead.querySelectorAll('th');\n\nconst arrayOfPeople = [];\nconst people = [];\n\nconst tbody = table.querySelector('tbody');\nconst trOfTbody = tbody.querySelectorAll('tr');\n\ntrOfTbody.forEach((tr) => {\n  const tds = tr.querySelectorAll('td');\n\n  tds.forEach((td) => {\n    arrayOfPeople.push(td.textContent);\n  });\n});\n\nfor (let i = 0; i < arrayOfPeople.length; i += 4) {\n  const person = {\n    name: arrayOfPeople[i],\n    position: arrayOfPeople[i + 1],\n    age: +arrayOfPeople[i + 2],\n    salary: parseInt(arrayOfPeople[i + 3].replace(/[$,]/g, '')),\n  };\n\n  people.push(person);\n}\n\ntrThThead.forEach((th) => {\n  th.addEventListener('click', (e) => {\n    const columnName = e.currentTarget.textContent.trim();\n\n    switch (columnName) {\n      case 'Name':\n        people.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n\n      case 'Position':\n        people.sort((a, b) => a.position.localeCompare(b.position));\n        break;\n\n      case 'Age':\n        people.sort((a, b) => a.age - b.age);\n        break;\n\n      case 'Salary':\n        people.sort((a, b) => a.salary - b.salary);\n        break;\n\n      default:\n        break;\n    }\n\n    renderTable();\n  });\n});\n\nfunction renderTable() {\n  tbody.innerHTML = '';\n\n  people.forEach((person) => {\n    const tr = document.createElement('tr');\n\n    tr.innerHTML = `\n      <td>${person.name}</td>\n      <td>${person.position}</td>\n      <td>${person.age}</td>\n      <td>$${person.salary.toLocaleString('en-US')}</td>\n    `;\n\n    tbody.appendChild(tr);\n  });\n}\n\nrenderTable();\n"],"names":["table","document","querySelector","trThThead","trOfHead","thead","querySelectorAll","arrayOfPeople","people","tbody","trOfTbody","forEach","tr","tds","td","push","textContent","i","length","person","name","position","age","salary","parseInt","replace","renderTable","innerHTML","createElement","concat","toLocaleString","appendChild","th","addEventListener","e","currentTarget","trim","sort","a","b","localeCompare"],"version":3,"file":"index.0a232483.js.map"}